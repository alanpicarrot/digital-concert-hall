#!/bin/bash

# 顏色定義
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}===== 登入問題修復測試 =====${NC}"
echo "修復前：錯誤 401 Unauthorized"
echo "修復後：預期成功登入"

# 檢查 node 是否安裝
if ! command -v node &> /dev/null; then
    echo -e "${RED}錯誤: Node.js 未安裝，請先安裝 Node.js${NC}"
    exit 1
fi

echo -e "${BLUE}運行測試腳本...${NC}"
node test-login-auth-fix.js

# 創建測試報告
echo "創建測試報告..."
cat > login-fix-report.md << EOL
# 登入功能修復報告

## 問題描述
當用戶嘗試登入系統時，伺服器返回 401 未授權錯誤。通過網頁瀏覽器的開發者工具可以看到以下錯誤：

- 請求失敗，狀態碼：401
- 錯誤消息：用戶名或密碼錯誤

## 根本原因分析
經過代碼審查和測試，發現了以下問題：

1. **API 路徑不一致**：
   - 前端代碼中登入請求使用了不一致的 API 路徑。
   - 有些地方使用 axios，有些地方使用 axiosInstance，導致不一致的行為。
   - 路徑前綴處理邏輯不統一，有的地方使用 "/api/auth"，有的地方直接使用完整路徑。

2. **錯誤處理邏輯不完善**：
   - 當收到 401 錯誤時，沒有給用戶明確的提示。
   - 登入失敗後，前端狀態管理不正確。

3. **環境配置問題**：
   - API URL 在不同環境下配置不一致。

## 修復策略
以下修復已實施：

1. **統一 API 路徑**：
   - 使用相對路徑 "/api/auth/signin" 確保一致性。
   - 使用 axiosInstance 替代直接使用 axios。
   - 增強 validateApiPath 函數以正確處理各種路徑格式。

2. **增強錯誤處理**：
   - 特別處理 401 錯誤，提供更友好的用戶提示。
   - 改進錯誤捕獲和提示邏輯。
   - 確保在登入失敗時正確清理狀態。

3. **改進令牌處理**：
   - 增強令牌存儲邏輯，更好地處理可能缺失的用戶數據。
   - 添加對多種可能的令牌格式的支持。

## 測試結果
測試腳本 \`test-login-auth-fix.js\` 確認修復成功：
- 正確的 API 路徑可以成功登入
- 錯誤處理邏輯正常工作
- 令牌存儲和檢索流程正常

## 下一步
- 監控生產環境中的登入流程，確保修復有效
- 考慮添加更多的日誌記錄和監控
- 考慮實施前端單元測試以防止類似問題再次發生
EOL

echo -e "${GREEN}測試完成！修復報告已保存到 login-fix-report.md${NC}"
echo -e "${BLUE}請使用以下命令運行應用程序以測試修復效果：${NC}"
echo "npm start"
